
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsH.js
 */
#pragma once

#include <react/renderer/components/view/ViewProps.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>
#include <vector>

namespace facebook::react {

struct PerformanceTrackerViewMetaStruct {
  std::string name{};
  std::string value{};
};

static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, PerformanceTrackerViewMetaStruct &result) {
  auto map = (std::unordered_map<std::string, RawValue>)value;

  auto tmp_name = map.find("name");
  if (tmp_name != map.end()) {
    fromRawValue(context, tmp_name->second, result.name);
  }
  auto tmp_value = map.find("value");
  if (tmp_value != map.end()) {
    fromRawValue(context, tmp_value->second, result.value);
  }
}

static inline std::string toString(const PerformanceTrackerViewMetaStruct &value) {
  return "[Object PerformanceTrackerViewMetaStruct]";
}

static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, std::vector<PerformanceTrackerViewMetaStruct> &result) {
  auto items = (std::vector<RawValue>)value;
  for (const auto &item : items) {
    PerformanceTrackerViewMetaStruct newItem;
    fromRawValue(context, item, newItem);
    result.emplace_back(newItem);
  }
}

class PerformanceTrackerViewProps final : public ViewProps {
 public:
  PerformanceTrackerViewProps() = default;
  PerformanceTrackerViewProps(const PropsParserContext& context, const PerformanceTrackerViewProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  std::string tagName{};
  bool isEnabled{false};
  double eventTimeStamp{0.0};
  std::vector<PerformanceTrackerViewMetaStruct> meta{};
};

} // namespace facebook::react
